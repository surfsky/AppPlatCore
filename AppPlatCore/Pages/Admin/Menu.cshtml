@page
@model App.Pages.Admin.MenuModel
@{
    ViewData["Title"] = "Menu";
}

@section body {

    <f:Panel ID="Panel1" BodyPadding="5" ShowBorder="false" Layout="Fit" ShowHeader="false" Title="菜单" IsViewPort="true">
        <Items>
            <f:Grid ID="Grid1" BoxFlex="1" ShowBorder="true" ShowHeader="false" EnableCheckBoxSelect="false" DataIDField="ID" DataTextField="Name" EnableSimulateTree="true" DataSource="@Model.Menus">
                <Columns>
                    <f:RowNumberField EnablePagingNumber="true"></f:RowNumberField>
                    <f:RenderField For="Menus.First().Name" DataSimulateTreeLevelField="TreeLevel" Width="150"></f:RenderField>
                    <f:RenderField For="Menus.First().NavigateUrl" Width="200"></f:RenderField>
                    <f:RenderField For="Menus.First().ViewPower.Name" Width="150"></f:RenderField>
                    <f:RenderField For="Menus.First().ImageUrl" RendererFunction="renderImageUrl" Width="80"></f:RenderField>
                    <f:RenderField For="Menus.First().Remark" ExpandUnusedSpace="true"></f:RenderField>
                    <f:RenderField For="Menus.First().SortIndex" Width="80"></f:RenderField>
                    <f:RenderField EnableColumnHide="false" EnableHeaderMenu="false" Width="50" RendererFunction="renderActionEdit"></f:RenderField>
                    <f:RenderField EnableColumnHide="false" EnableHeaderMenu="false" Width="50" RendererFunction="renderActionDelete"></f:RenderField>
                </Columns>
                <Toolbars>
                    <f:Toolbar ID="Toolbar1" Position="Top">
                        <Items>
                            <f:ToolbarFill></f:ToolbarFill>
                            <f:Button ID="btnNew" Icon="Add" Text="新增菜单" Enabled="@Model.PowerCoreMenuNew">
                                <Listeners>
                                    <f:Listener Event="click" Handler="onNewClick"></f:Listener>
                                </Listeners>
                            </f:Button>
                        </Items>
                    </f:Toolbar>
                </Toolbars>
            </f:Grid>
        </Items>
    </f:Panel>


    <f:Window ID="Window1" IsModal="true" Hidden="true" Target="Top" EnableResize="true"
              EnableMaximize="true" EnableIFrame="true" Width="900" Height="550"
              OnClose="@Url.Handler("Menu_Window1_Close")" OnCloseFields="Panel1">
    </f:Window>

}


@section script {

    <script>

        var coreMenuEdit = @Convert.ToString(Model.PowerCoreMenuEdit).ToLower();
        var coreMenuDelete = @Convert.ToString(Model.PowerCoreMenuDelete).ToLower();

        function onNewClick(event) {
            F.ui.Window1.show('@Url.Content("~/Admin/MenuNew")', '新增');
        }

        function renderImageUrl(value, params) {
            var imageUrl = value.replace(/^~\//, F.baseUrl);
            return '<img src="'+ imageUrl +'" />';
        }

        function renderActionEdit(value, params) {
            var imageUrl = '@Url.Content("~/res/icon/pencil.png")';
            var disabledCls = coreMenuEdit ? '' : ' f-state-disabled';
            return '<a class="action-btn edit'+ disabledCls +'" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
        }

        function renderActionDelete(value, params) {
            var imageUrl = '@Url.Content("~/res/icon/delete.png")';
            var disabledCls = coreMenuDelete ? '' : ' f-state-disabled';
            return '<a class="action-btn delete'+ disabledCls +'" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
        }

        F.ready(function () {

            var grid1 = F.ui.Grid1;
            grid1.el.on('click', 'a.action-btn', function (event) {
                var cnode = $(this);
                var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

                // 是否禁用
                if(cnode.hasClass('f-state-disabled')) {
                    return;
                }

                if (cnode.hasClass('delete')) {
                    F.confirm({
                        message: '确定删除此记录？',
                        target: '_top',
                        ok: function () {
                            // 触发后台事件
                            F.doPostBack('@Url.Handler("Menu_DeleteRow")', 'Grid1', {
                                deletedRowID: rowData.id
                            });
                        }
                    });
                } else if (cnode.hasClass('edit')) {
                    F.ui.Window1.show('@Url.Content("~/Admin/MenuEdit?id=")' + rowData.id, '编辑');
                }
            });

        });

    </script>
}

