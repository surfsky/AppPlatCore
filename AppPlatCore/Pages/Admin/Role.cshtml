@page
@model App.Pages.Admin.RoleModel
@{
    ViewData["Title"] = "Role";
    var PagingInfo = Model.PagingInfo;
}

@section body {

    <f:Grid ID="Grid1" BoxFlex="1" ShowBorder="true" ShowHeader="false" EnableCheckBoxSelect="false" DataIDField="ID" DataTextField="Name" AllowSorting="true" IsViewPort="true"
            SortField="@PagingInfo.SortField" SortDirection="@PagingInfo.SortDirection"
            AllowPaging="true" IsDatabasePaging="true" PageSize="@PagingInfo.PageSize" DataSource="@Model.Roles" RecordCount="@PagingInfo.RecordCount"
            OnSort="@Url.Handler("Role_DoPostBack")" OnSortFields="Panel1"
            OnPageIndexChanged="@Url.Handler("Role_DoPostBack")" OnPageIndexChangedFields="Panel1">
        <Toolbars>
            <f:Toolbar ID="Toolbar1" Position="Top">
                <Items>
                    <f:Button ID="btnNew" Icon="Add" Text="新增" Enabled="@Model.PowerCoreRoleNew">
                        <Listeners>
                            <f:Listener Event="click" Handler="onNewClick"></f:Listener>
                        </Listeners>
                    </f:Button>
                    <f:TwinTriggerBox ID="ttbSearchMessage" ShowLabel="false" EmptyText="在角色名称中搜索" Trigger1Icon="Clear" Trigger2Icon="Search" ShowTrigger1="false"
                                      OnTrigger1Click="@Url.Handler("Role_DoPostBack")" OnTrigger1ClickParameter1="@(new Parameter("actionType","trigger1",ParameterMode.String))" OnTrigger1ClickFields="Panel1"
                                      OnTrigger2Click="@Url.Handler("Role_DoPostBack")" OnTrigger2ClickParameter1="@(new Parameter("actionType","trigger2",ParameterMode.String))" OnTrigger2ClickFields="Panel1">
                    </f:TwinTriggerBox>
                </Items>
            </f:Toolbar>
        </Toolbars>
        <Columns>
            <f:RowNumberField EnablePagingNumber="true"></f:RowNumberField>
            <f:RenderField EnableColumnHide="false" EnableHeaderMenu="false" Width="38" RendererFunction="renderActionEdit"></f:RenderField>
            <f:RenderField EnableColumnHide="false" EnableHeaderMenu="false" Width="38" RendererFunction="renderActionDelete"></f:RenderField>
            <f:RenderField For="Roles.First().Name" SortField="Name" Width="180"></f:RenderField>
            <f:RenderField For="Roles.First().Remark" ExpandUnusedSpace="true"></f:RenderField>
        </Columns>
        <PageItems>
            <f:ToolbarSeparator></f:ToolbarSeparator>
            <f:ToolbarText Text="每页记录数："></f:ToolbarText>
            <f:DropDownList ID="ddlGridPageSize" Width="80" SelectedValue="@PagingInfo.PageSize.ToString()"
                            OnSelectedIndexChanged="@Url.Handler("Role_DoPostBack")" OnSelectedIndexChangedParameter1="@(new Parameter("actionType","changeGridPageSize",ParameterMode.String))" OnSelectedIndexChangedFields="Panel1">
                <Items>
                    <f:ListItem Text="10" Value="10"></f:ListItem>
                    <f:ListItem Text="20" Value="20"></f:ListItem>
                    <f:ListItem Text="50" Value="50"></f:ListItem>
                    <f:ListItem Text="100" Value="100"></f:ListItem>
                </Items>
            </f:DropDownList>
        </PageItems>
    </f:Grid>

    <f:Window ID="Window1" IsModal="true" Hidden="true" Target="Top" EnableResize="true"
              EnableMaximize="true" EnableIFrame="true" Width="900" Height="550"
              OnClose="@Url.Handler("Role_DoPostBack")" OnCloseFields="Panel1">
    </f:Window>

}


@section script {

    <script>

        var coreRoleEdit = @Convert.ToString(Model.PowerCoreRoleEdit).ToLower();
        var coreRoleDelete = @Convert.ToString(Model.PowerCoreRoleDelete).ToLower();

        function onNewClick(event) {
            F.ui.Window1.show('@Url.Content("~/Admin/RoleNew")', '新增');
        }

        function renderActionEdit(value, params) {
            var imageUrl = '@Url.Content("~/res/icon/pencil.png")';
            var disabledCls = coreRoleEdit ? '' : ' f-state-disabled';
            return '<a class="action-btn edit'+ disabledCls +'" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
        }

        function renderActionDelete(value, params) {
            var imageUrl = '@Url.Content("~/res/icon/delete.png")';
            var disabledCls = coreRoleDelete ? '' : ' f-state-disabled';
            return '<a class="action-btn delete'+ disabledCls +'" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
        }

        F.ready(function () {

            var grid1 = F.ui.Grid1;
            grid1.el.on('click', 'a.action-btn', function (event) {
                var cnode = $(this);
                var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

                // 是否禁用
                if(cnode.hasClass('f-state-disabled')) {
                    return;
                }

                if (cnode.hasClass('delete')) {
                    F.confirm({
                        message: '确定删除此记录？',
                        target: '_top',
                        ok: function () {
                            // 触发后台事件
                            F.doPostBack('@Url.Handler("Role_DoPostBack")', 'Panel1', {
                                actionType: 'delete',
                                deletedRowID: rowData.id
                            });
                        }
                    });
                } else if (cnode.hasClass('edit')) {
                    F.ui.Window1.show('@Url.Content("~/Admin/RoleEdit?id=")' + rowData.id, '编辑');
                }
            });

        });

    </script>
}

